package Filters;

public class wienerFilter {
	
	public static double[] wFilter(double[] input, double[] reference){
		
		double output[] = new double[input.length];
		
		
		return output;
	}
	
	
	public static double[][] autocorrelation(double[] input, double[] reference){
		
		double T[][] = new double[input.length][input.length];
		
		for(int i=0; i<input.length; i++){
			for(int j=0; j<input.length; j++){
				if(j-i>=0 && j-i<=input.length){
					T[i][j]=input[0]*input[j-i];
					System.out.printf(T[i][j]+", ");
				}else if(j-i<0){
					int pos =-(j-i);
					T[i][j]=input[0]*input[pos];
					System.out.printf(T[i][j]+", ");
				}
			}
			System.out.println("");
		}
		return T;
	}
	
	public static double[] crosscorrelation(double[] input, double[] reference){
		
		double R_sw[] = new double[input.length];
		return R_sw
		
	}
	
	public static double[] weights(double[] T, double[] v){
		
		double a[] = new double[v.length];
		
		a = v^-1.T;
		
		return a;
	}
	

	
}
