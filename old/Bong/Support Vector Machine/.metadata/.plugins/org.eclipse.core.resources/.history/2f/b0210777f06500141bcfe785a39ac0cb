

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.util.*;
import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.*;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 * @see http://stackoverflow.com/a/13794076/230513
 * @see http://stackoverflow.com/questions/8430747
 * @see http://stackoverflow.com/questions/8048652
 * @see http://stackoverflow.com/questions/7231824
 * @see http://stackoverflow.com/questions/7205742
 * @see http://stackoverflow.com/questions/7208657
 * @see http://stackoverflow.com/questions/7071057
 * @see http://stackoverflow.com/questions/8736553
 */
public class svm_plot_helper extends JFrame {

	public static final double NEGATIVE = -1.0;
	public static final double POSITIVE = 1.0;
	
    private static final int N = 8;
    private static final int SIZE = 600;
    private static final String title = "Scatter Add Demo";
//    private static final Random rand = new Random();
    private final XYSeries neg = new XYSeries("-1 data");
    private final XYSeries pos = new XYSeries("+1 data");

    public svm_plot_helper(String s) {
        super(s);
        final ChartPanel chartPanel = createDemoPanel(s);

        chartPanel.setPreferredSize(new Dimension(SIZE, SIZE));
        JDialog aa = new JDialog();
        aa.add(chartPanel);
        aa.pack();
        aa.setVisible(true);
        this.add(chartPanel, BorderLayout.CENTER);
/*        JPanel control = new JPanel();
        control.add(new JButton(new AbstractAction("Move") {

            
            public void actionPerformed(ActionEvent e) {
                for (int i = 0; i < N / 2; i++) {
                    XYDataItem item = neg.remove(0);
                    if (item != null) {
                        pos.add(item);
                    }
                }
            }
        }));
        this.add(control, BorderLayout.SOUTH);
*/    }

    private ChartPanel createDemoPanel(String title) {
        JFreeChart jfreechart = ChartFactory.createScatterPlot(
            title, "X1", "X2", createSeries(),
            PlotOrientation.VERTICAL, true, true, false);
        XYPlot xyPlot = (XYPlot) jfreechart.getPlot();
        xyPlot.setDomainCrosshairVisible(true);
        xyPlot.setRangeCrosshairVisible(true);
        XYItemRenderer renderer = xyPlot.getRenderer();
        renderer.setSeriesPaint(0, Color.blue);
        adjustAxis((NumberAxis) xyPlot.getDomainAxis(), false);
        adjustAxis((NumberAxis) xyPlot.getRangeAxis(), false);
        xyPlot.setBackgroundPaint(Color.white);
        return new ChartPanel(jfreechart);
    }

    private void adjustAxis(NumberAxis axis, boolean vertical) {
        axis.setRange(-6.0, 6.0);
        axis.setTickUnit(new NumberTickUnit(0.5));
        axis.setVerticalTickLabels(vertical);
    }

    private XYDataset createSeries() {
        XYSeriesCollection xySeriesCollection = new XYSeriesCollection();

        xySeriesCollection.addSeries(neg);
        xySeriesCollection.addSeries(pos);
        return xySeriesCollection;
    }

    public void addData(double series, double x, double y){
    	if(series == NEGATIVE)
    		neg.add(x,y);
    	else if(series == POSITIVE)
    		pos.add(x,y);
    }
    public static void main(String args[]) {
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                svm_plot_helper demo = new svm_plot_helper(title);
                demo.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                demo.pack();
                demo.setLocationRelativeTo(null);
                demo.setVisible(true);
            }
        });
    }
}